import { subDays } from 'date-fns';
import { PropertyType, Transaction } from '../src/types/transaction';

const today = new Date();
const nineDaysAgo = subDays(today, 9);

export const DUMMY_FIXTURES: Transaction[] = [
  {
    id: '1',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: nineDaysAgo,
    transactionNetValue: 10,
    transactionCost: 1,
    propertyType: PropertyType.Apartment,
    city: 'Paris',
    area: 50,
  },
  {
    id: '2',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: nineDaysAgo,
    transactionNetValue: 20,
    transactionCost: 2,
    propertyType: PropertyType.Apartment,
    city: 'Paris',
    area: 50,
  },
  {
    id: '3',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: nineDaysAgo,
    transactionNetValue: 30,
    transactionCost: 3,
    propertyType: PropertyType.Apartment,
    city: 'Paris',
    area: 50,
  },
  {
    id: '4',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: nineDaysAgo,
    transactionNetValue: 40,
    transactionCost: 4,
    propertyType: PropertyType.Apartment,
    city: 'Stockholm',
    area: 50,
  },
  {
    id: '5',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: nineDaysAgo,
    transactionNetValue: 50,
    transactionCost: 5,
    propertyType: PropertyType.Apartment,
    city: 'Stockholm',
    area: 50,
  },
  {
    id: '6',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: nineDaysAgo,
    transactionNetValue: 60,
    transactionCost: 6,
    propertyType: PropertyType.Apartment,
    city: 'Stockholm',
    area: 50,
  },
  {
    id: '7',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: today,
    transactionNetValue: 70,
    transactionCost: 7,
    propertyType: PropertyType.Apartment,
    city: 'London',
    area: 50,
  },
  {
    id: '8',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: today,
    transactionNetValue: 80,
    transactionCost: 8,
    propertyType: PropertyType.Apartment,
    city: 'London',
    area: 50,
  },
  {
    id: '9',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: today,
    transactionNetValue: 90,
    transactionCost: 9,
    propertyType: PropertyType.Apartment,
    city: 'London',
    area: 50,
  },
  {
    id: '10',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: today,
    transactionNetValue: 100,
    transactionCost: 10,
    propertyType: PropertyType.Apartment,
    city: 'London',
    area: 50,
  },
  {
    id: '11',
    createdAt: new Date(),
    updatedAt: new Date(),
    transactionDate: today,
    transactionNetValue: 110,
    transactionCost: 11,
    propertyType: PropertyType.Apartment,
    city: 'London',
    area: 50,
  },
].map(({ transactionCost, transactionNetValue, ...transaction }) => ({
  ...transaction,
  transactionCost,
  transactionNetValue,
  transactionMargin: transactionNetValue - transactionCost,
}));
